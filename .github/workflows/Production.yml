name: 🚀 Deploy Production Community Club to Remote VPS IIS

on:
  push:
    branches:
      - Production
  workflow_dispatch:  # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest  # <-- Changed from windows-latest to ubuntu-latest
    steps:
    - name: ⏬ Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
          node-version: 22.12.0  # Adjust as needed
          
    - name: Install Angular CLI
      run: npm install -g @angular/cli

    - name: Install Dependencies
      run: npm install --force

    - name: Build Angular App
      run: ng build  # No configuration, just default build

    - name: Zip Build Files
      run: |
          cd dist/worker-admin/browser  # ✅ Change directory to correct output folder
          zip -r ../../../club.zip .  # ✅ Create ZIP in repo root

   # Step to send "Workflow Started" email notification
    - name: 🚀 Send mail notification (Workflow Started)
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Workflow Started: ${{ github.workflow }} on ${{ github.ref }} Community Club Production"
          body: |
            🚀 The workflow **${{ github.workflow }}** has started on branch **${{ github.ref }}**.
            🏢 Repository: **${{ github.repository }}**
            👤 Pushed by: **${{ github.actor }}**
            🔗 Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            📅 Timestamp: **${{ github.event.head_commit.timestamp }}**
          to: ${{ secrets.Dev_Mails }}
          from: "StudiFlat_Automation <${{ secrets.SMTP_USERNAME }}>"
          secure: false
    - name: 🚀 Send WhatsApp Message (Workflow Started)
      if: always()
      run: |
        # Generate the current datetime in UTC formatted as ISO 8601 (e.g., 2022-09-24T12:00:17Z)
        SCHEDULE_AT=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        # Define a space-separated list of recipient chat_ids (phone numbers)
        recipients="${{ secrets.Dev_Phones }}"
        
        for chat_id in $recipients; do
          echo "Sending message to $chat_id scheduled at $SCHEDULE_AT"
          curl --request POST \
            "https://cloudwa.net/api/v2/messages/send-message" \
            --header "Authorization: Bearer ${{ secrets.CLOUDWA_AUTH_KEY }}" \
            --header "Content-Type: application/json" \
            --header "Accept: application/json" \
            --header "Accept-Language: en" \
            --data "{
              \"session_uuid\": \"${{secrets.CLOUDWA_Session_KEY}}\",
              \"chat_id\": \"${chat_id}\",
              \"type\": \"TEXT\",
              \"schedule_at\": \"${SCHEDULE_AT}\",
              \"message\": \" 🚀 The workflow **${{ github.workflow }}** has started on branch **${{ github.ref }}**. 🏢 Repository: **${{ github.repository }}** 👤 Pushed by: **${{ github.actor }}** 🔗 Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) 📅 Timestamp: **${{ github.event.head_commit.timestamp }}**\"
            }"
        done      
    




    - name: 📂Upload To Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.IIS_ADDRESS }}
        username: ${{ secrets.IIS_USER }}
        password: ${{ secrets.IIS_PASSWORD }}
        source: "club.zip"
        target: "C:\\inetpub\\wwwroot\\StudiFlatsClub\\Production"


    - name: 🚀 Deploy to IIS Website on Remote Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.IIS_ADDRESS }}
        username: ${{ secrets.IIS_USER }}
        password: ${{ secrets.IIS_PASSWORD }}
        script: |
          powershell.exe -ExecutionPolicy Bypass -File C:\AirflowTasks\ClubProductionDeploy.ps1
          
 # Step to send "Workflow Started" email notification
    - name: 🚀 Send mail notification (Workflow Finished)
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Workflow ${{ job.status }} : ${{ github.workflow }} on ${{ github.ref }} Community Club Production"
          body: |
            🚀 The workflow **${{ github.workflow }}** has ${{ job.status }} on branch **${{ github.ref }}**.
            🏢 Repository: **${{ github.repository }}**
            👤 Pushed by: **${{ github.actor }}**
            🔗 Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            📅 Timestamp: **${{ github.event.head_commit.timestamp }}**
            📶 Status: ${{ job.status }}
          to: ${{ secrets.Dev_Mails }}
          from: "StudiFlat_Automation <${{ secrets.SMTP_USERNAME }}>"
          secure: false
    - name: 🚀 Send WhatsApp Message (Workflow Finished)
      if: always()
      run: |
        # Generate the current datetime in UTC formatted as ISO 8601 (e.g., 2022-09-24T12:00:17Z)
        SCHEDULE_AT=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        # Define a space-separated list of recipient chat_ids (phone numbers)
        recipients="${{ secrets.Dev_Phones }}"
        
        for chat_id in $recipients; do
          echo "Sending message to $chat_id scheduled at $SCHEDULE_AT"
          curl --request POST \
            "https://cloudwa.net/api/v2/messages/send-message" \
            --header "Authorization: Bearer ${{ secrets.CLOUDWA_AUTH_KEY }}" \
            --header "Content-Type: application/json" \
            --header "Accept: application/json" \
            --header "Accept-Language: en" \
            --data "{
              \"session_uuid\": \"${{secrets.CLOUDWA_Session_KEY}}\",
              \"chat_id\": \"${chat_id}\",
              \"type\": \"TEXT\",
              \"schedule_at\": \"${SCHEDULE_AT}\",
              \"message\": \"🚀 The workflow **${{ github.workflow }}** has ${{ job.status }} on branch **${{ github.ref }}**. 🏢 Repository: **${{ github.repository }}** 👤 Pushed by: **${{ github.actor }}** 🔗 Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) 📅 Timestamp: **${{ github.event.head_commit.timestamp }}** 📶 Status: ${{ job.status }}\"
            }"
        done      
    - name: ✅ Deployment Completed!
      run: echo "🎉 Deployment to IIS on Remote VPS completed successfully!"
